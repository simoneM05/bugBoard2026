// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
   provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
    id       String  @id @default(auto()) @map("_id") @db.ObjectId
    email    String  @unique
    password String
    role     Role    @default(user)
    refreshToken String?  // Nullable per logout
    authoredIssues Issue[] @relation("AuthorIssues")
    assignedIssues Issue[] @relation("AssignedIssues")
    comments CommentIssue[]
}


model Issue {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    priority    Priority @default(low)
    image       String?
    title       String
    description String
    type        TypeIssue @default(bug)
    status      Status   @default(ToDo)
    createdAt   DateTime @default(now())
    authorId    String   @db.ObjectId
    author      User     @relation("AuthorIssues", fields: [authorId], references: [id])
    assigneeId  String?   @db.ObjectId
    assignee    User?     @relation("AssignedIssues", fields: [assigneeId], references: [id])
    comments    CommentIssue[]
}

model CommentIssue {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    String   @db.ObjectId
  author      User     @relation(fields: [authorId], references: [id])
  issueId     String   @db.ObjectId
  issue       Issue    @relation( fields: [issueId], references: [id])
}

enum Priority {
  low
  medium
  high
}
enum TypeIssue {
  question
  bug
  feature
  documentation
}
enum Status {
  ToDo
  InProgress
  Done
}
enum Role {
  admin
  user
  stakeholder
}
