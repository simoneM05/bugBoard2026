version: '3.8'

services:
  server:
    container_name: server
    build:
      context: ./
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      DATABASE_URL: mongodb://root:prisma@mongo:27017/devdb?authSource=admin&replicaSet=rs0
    volumes:
      - ./:/app
      - /app/node_modules
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - backend

  mongo:
    image: mongo:7.0
    container_name: mongo
    restart: unless-stopped
    command: ['--replSet', 'rs0', '--bind_ip_all']
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: prisma
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    healthcheck:
      test: |
        mongosh --quiet --eval "
        try {
          rs.status();
        } catch(err) {
          rs.initiate({
            _id: 'rs0',
            members: [{ _id: 0, host: 'host.docker.internal:27017' }]
          });
        }"
      interval: 5s
      timeout: 10s
      retries: 30
      start_period: 10s
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  mongo-config:
    driver: local
